# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "mpt3sas"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "zroot/root";
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "zroot/nix";
    fsType = "zfs";
  };

  fileSystems."/home" = {
    device = "zroot/home";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/50E9-474F";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  fileSystems."/boot-fallback" = {
    device = "/dev/disk/by-uuid/5141-69CA";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  fileSystems."/mnt/mediatank/tmp" = {
    device = "mediatank/tmp";
    fsType = "zfs";
  };

  fileSystems."/mnt/mediatank/media" = {
    device = "mediatank/media";
    fsType = "zfs";
  };

  fileSystems."/mnt/datavault/vault" = {
    device = "datavault/vault";
    fsType = "zfs";
  };

  fileSystems."/mnt/datavault/photo" = {
    device = "datavault/photo";
    fsType = "zfs";
  };

  fileSystems."/mnt/datavault/data" = {
    device = "datavault/data";
    fsType = "zfs";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/518db4a4-2c33-4af2-a1d5-b70dbb3dba8f"; }
    { device = "/dev/disk/by-uuid/30d9f594-dfac-4ff3-a8ca-945c771f2144"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
